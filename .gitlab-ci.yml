include:
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - component: $CI_SERVER_FQDN/onelitefeather/ci-components/core-stages@0.3.9
  - component: $CI_SERVER_FQDN/onelitefeather/ci-components/gradle-build-cache@0.3.9
  - component: $CI_SERVER_FQDN/onelitefeather/ci-components/gradle-java-pipeline-versions-rules@0.3.9
  - component: $CI_SERVER_FQDN/onelitefeather/ci-components/basic-rules@0.3.9
variables:
  SECURE_ANALYZERS_PREFIX: "${HTL_NEXUS_PROXY}/security-products"
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  GRADLE_OPTS: "-Dorg.gradle.internal.launcher.welcomeMessageEnabled=false"
  GRADLE_IMAGE: "${HTL_NEXUS_PROXY}/gradle:8.10.2-jdk21"

build:
  stage: build
  image: $GRADLE_IMAGE
  tags:
    - saas-linux-medium-amd64
  extends:
    - .gradle-project-cache
  rules:
    - !reference [.gradle-java-image-rules, rules]
    - !reference [.workflow-rules-run-on-merge-request, rules]
    - !reference [.workflow-rules-run-on-default-branch, rules]
    - !reference [.workflow-rules-run-on-main, rules]
    - !reference [ .workflow-rules-run-on-label-publish, rules ]
    - !reference [ .workflow-rules-run-on-tags, rules ]
  artifacts:
    paths:
      - app/build/libs/titan.jar
      - setup/build/libs/titan.jar
    expire_in: 1 week
  script:
    - gradle build -x test

test:
  stage: test
  image: $GRADLE_IMAGE
  tags:
    - saas-linux-medium-amd64
  extends:
    - .gradle-project-cache
  rules:
    - !reference [ .gradle-java-image-rules, rules ]
    - !reference [ .workflow-rules-run-on-merge-request, rules ]
    - !reference [ .workflow-rules-run-on-default-branch, rules ]
    - !reference [ .workflow-rules-run-on-main, rules ]
    - !reference [ .workflow-rules-run-on-label-publish, rules ]
    - !reference [ .workflow-rules-run-on-tags, rules ]
  script:
    - gradle test

publish gradle:
  stage: publish
  image: $GRADLE_IMAGE
  tags:
    - saas-linux-medium-amd64
  extends:
    - .gradle-project-cache
  rules:
    - !reference [ .gradle-java-image-rules, rules ]
    - !reference [ .workflow-rules-run-on-merge-request, rules ]
    - !reference [ .workflow-rules-run-on-default-branch, rules ]
    - !reference [ .workflow-rules-run-on-main, rules ]
    - !reference [ .workflow-rules-run-on-label-publish, rules ]
    - !reference [ .workflow-rules-run-on-tags, rules ]
  script:
    - gradle publish
publish container:
  image: "${HTL_NEXUS_PROXY}/buildah/stable:latest"
  stage: publish
  rules:
    - !reference [.workflow-rules-run-on-tags, rules]
    - !reference [.workflow-rules-run-on-main, rules]
    - !reference [.workflow-rules-run-on-label-publish, rules]
    - !reference [.workflow-rules-run-on-default-branch, rules]
  tags:
    - saas-linux-medium-amd64
  dependencies:
    - build
  needs:
    - build
  script:
    - buildah login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - buildah build -t $IMAGE_TAG -t $CI_REGISTRY_IMAGE:latest -f app/Dockerfile
      --build-arg JAR_FILE=app/build/libs/titan.jar
      --build-arg MAPS=worlds/ .
    - buildah push $IMAGE_TAG
    - buildah push $CI_REGISTRY_IMAGE:latest